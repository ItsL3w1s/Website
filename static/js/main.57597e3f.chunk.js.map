{"version":3,"sources":["components/GettingStarted.tsx","components/Usage.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["GettingStarted","id","target","rel","href","Usage","className","title","src","frameBorder","allow","allowFullScreen","Image","alt","fluid","rounded","App","ReactGA","initialize","pageview","Navbar","bg","variant","expand","Container","Brand","Toggle","aria-controls","Collapse","Nav","Link","Jumbotron","Row","Col","sm","md","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","tocbot","tocSelector","contentSelector","headingSelector","collapseDepth"],"mappings":"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","file":"static/js/main.57597e3f.chunk.js","sourcesContent":["import React from 'react';\n\nconst GettingStarted = () => {\n  return (\n    <>\n      <h2 id=\"getting-started\">Getting Started</h2>\n      <ol>\n        <li>\n          Depending on where your purchased Cities: Skylines, there are a few\n          different ways of acquiring the multiplayer mod:\n          <ul>\n            <li>\n              <strong>Steam Workshop:</strong> Click on{' '}\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://steamcommunity.com/sharedfiles/filedetails/?id=1558438291\"\n              >\n                this link\n              </a>{' '}\n              to visit the steam workshop page, click 'subscribe' to install the\n              mod.\n            </li>\n            <li>\n              <strong>Manual Download: </strong> You can also manually download\n              releases using GitHub{' '}\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://github.com/CitiesSkylinesMultiplayer/CSM/releases\"\n              >\n                here\n              </a>\n              . Find the version that you want (both the client and host must\n              use the same version), and then download the .zip file under\n              'assets'.\n            </li>\n            <li>\n              <strong>Custom Download: </strong> You can also download\n              unreleased versions of the mod as soon as any code changes are\n              made. Navigate to the list of CI builds{' '}\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://github.com/CitiesSkylinesMultiplayer/CSM/actions?query=workflow%3ACI+is%3Asuccess+branch%3Amaster\"\n              >\n                here\n              </a>\n              , and click on the latest build (remember, both the client and\n              host must use the same version). Under the artifacts heading,\n              click on the 'CSM [Version]' link to download.\n            </li>\n            <li>\n              <strong>From Source: </strong> You can also build the mod from\n              source, see the resources{' '}\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://github.com/CitiesSkylinesMultiplayer/CSM/wiki/Developer-Resources\"\n              >\n                here\n              </a>{' '}\n              for more information.\n            </li>\n          </ul>\n        </li>\n\n        <li>\n          <strong>If you downloaded the mod</strong> you will need to install\n          it. First extract the downloaded .zip archive. There are two methods\n          to install the mod:\n          <ul>\n            <li>\n              <strong>Installer: </strong>If running on windows, right click the\n              'install.ps1' file and click 'Run with PowerShell'. If running on\n              macOS or Linux, you will need{' '}\n              <a\n                href=\"https://github.com/PowerShell/PowerShell\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                PowerShell Core\n              </a>{' '}\n              installed. Run <code>pwsh install.ps1</code>.\n            </li>\n            <li>\n              <strong>Manually: </strong> Create a new folder in the following\n              location called 'CSM':\n              <ul>\n                <li>\n                  <strong>Windows: </strong>\n                  <code>\n                    %LOCALAPPDATA%\\Colossal Order\\Cities_Skylines\\Addons\\Mods\\\n                  </code>\n                </li>\n                <li>\n                  <strong>macOS: </strong>\n                  <code>\n                    ~/Library/Application Support/Colossal\n                    Order/Cities_Skylines/Addons/Mods\n                  </code>\n                </li>\n                <li>\n                  <strong>Linux: </strong>\n                  <code>\n                    ~/.local/share/Colossal Order/Cities_Skylines/Addons/Mods\n                  </code>\n                </li>\n              </ul>\n              <li>\n                Copy all of the .dll files from the downloaded archive to the\n                new folder you just created (everything apart from{' '}\n                <code>install.ps1</code>).\n              </li>\n            </li>\n          </ul>\n        </li>\n        <li>\n          <strong>IMPORTANT: </strong> After launching Cities: Skylines, you\n          must first enable the mod within 'Content Manager' or it will not\n          appear!\n        </li>\n        <li>The mod is now installed and enabled, have fun!</li>\n      </ol>\n    </>\n  );\n};\n\nexport default GettingStarted;\n","import React from 'react';\nimport Image from 'react-bootstrap/Image';\n\nconst Usage = () => {\n  return (\n    <>\n      <h2 id=\"usage\">Usage</h2>\n      <h3 id=\"usage-general\">General</h3>\n      <p>\n        The Cities: Skylines Multiplayer mod enable multiplayer via a\n        client-server approach. This means one player will act as the host (or\n        server), and other players will connect to them. Decided which player\n        will be the host (the host will have a little more work to do in order\n        to play, and will have the multiplayer save on their computer).\n      </p>\n\n      <h3 id=\"usage-host\">Host</h3>\n      <p>\n        <strong>Please Note: </strong> You may need to port forward your router\n        depending on which connection method you use. More information about\n        this is mentioned below.\n      </p>\n      <ol>\n        <li>Ensure that the mod is installed and enabled.</li>\n        <li>\n          Either create a new map, or open an existing save. It's highly\n          recommend that you{' '}\n          <strong>backup any saves before you play on multiplayer!</strong>\n          <br />\n          Saves are located in the following locations:\n          <ul>\n            <li>\n              <strong>Windows: </strong>\n              <code>%LOCALAPPDATA%\\Colossal Order\\Cities_Skylines\\Saves\\</code>\n            </li>\n            <li>\n              <strong>macOS: </strong>\n              <code>\n                ~/Library/Application Support/Colossal\n                Order/Cities_Skylines/Saves\n              </code>\n            </li>\n            <li>\n              <strong>Linux: </strong>\n              <code>~/.local/share/Colossal Order/Cities_Skylines/Saves</code>\n            </li>\n          </ul>\n        </li>\n        <li>\n          Click on the 'Multiplayer' button on the top left of your screen to\n          open the multiplayer menu.\n        </li>\n        <li>Update any of the fields to your liking, click 'Create Server'.</li>\n        <li>You should see a message saying that the server has started.</li>\n      </ol>\n\n      <h4 id=\"port-forwarding\">Port Forwarding Strategies</h4>\n      <p>\n        This mod requires the host (or server) to expose the port '4230' (or\n        whatever port was entered) to the internet.\n      </p>\n      <p>\n        <strong>\n          Note: Only the host needs to port forward! If you are only playing\n          locally (see below), you do not need to port forward!\n        </strong>\n      </p>\n\n      <h5 id=\"port-forwarding-router\">Port forwarding your router</h5>\n      <p>\n        You will need to port forward either port '4230' or whatever port you\n        set when hosting the game. There are many tutorials online that explain\n        this such as{' '}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://www.noip.com/support/knowledgebase/general-port-forwarding-guide/\"\n        >\n          this\n        </a>\n        .\n      </p>\n\n      <h5 id=\"port-forwarding-tunneling\">Using a tunneling service</h5>\n      <p>\n        If you can't port forward your router (don't have access to the router,\n        Internet Service Provider (ISP) restrictions etc.) you can use a\n        tunneling service such as{' '}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://www.vpn.net/\"\n        >\n          Hamachi\n        </a>\n        .\n      </p>\n\n      <p>\n        An amazing tutorial on how to use Hamachi with Cities: Skylines\n        Multiplayer by Selim Hjorthall:\n      </p>\n\n      <div className=\"embed-responsive embed-responsive-16by9\">\n        <iframe\n          title=\"Hamachi tutorial by Selim Hjorthall on YouTube\"\n          className=\"embed-responsive-item\"\n          src=\"https://www.youtube.com/embed/aYFzwULLrb0\"\n          frameBorder=\"0\"\n          allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n          allowFullScreen\n        ></iframe>\n      </div>\n      <br />\n\n      <h4 id=\"which-ip\">Which IP address do players use?</h4>\n      <p>\n        The IP address used for connecting will depend on which port forwarding\n        strategy you used above and how/where your planning on playing the game.\n      </p>\n      <p>\n        <strong>Note: </strong>For your convenience, the mod will display both\n        your local network IP address and external network IP address within the\n        server hosting menu.\n      </p>\n      <p>\n        If you and your friends are on the same network (think LAN party, or\n        same household) follow these steps:\n      </p>\n      <ol>\n        <li>\n          Open the command prompt (on Windows 10 you click the start button and\n          type in 'cmd' and hit enter).\n        </li>\n        <li>\n          Type in <code>ipconfig</code>.\n        </li>\n        <li>\n          You should see something similar the the image below (note: you may\n          see multiple adapters, usually the adapter with a valid 'Default\n          Gateway' is the one you want to look at), the IPv4 address highlighted\n          is the address that players on your local network should use to\n          connect to the server.\n          <br />\n          <Image\n            className=\"mt-2\"\n            alt=\"ipconfig command with 'IPv4 Address highlighted'\"\n            src=\"/assets/ipconfig.png\"\n            fluid\n            rounded\n          />\n        </li>\n      </ol>\n      <p>\n        If you and your friends are playing over the internet, you have two\n        choices: If you port forwarded your router, simple google 'What's my IP\n        address' and send that address to any players. If you used a tunneling\n        service like{' '}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://www.vpn.net/\"\n        >\n          Hamachi\n        </a>\n        , you will need to use the IP address that is provided there.\n      </p>\n      <h3 id=\"usage-players\">Players</h3>\n      <ol>\n        <li>Ensure that the mod is installed and enabled.</li>\n        <li>Click the 'Join Game' button on the main menu.</li>\n        <li>Enter the host (server) information, alongside your name.</li>\n        <li>\n          Click 'Connect to Server' and wait up to 60 seconds (it should usually\n          take less than 5 seconds to connect).\n        </li>\n      </ol>\n    </>\n  );\n};\n\nexport default Usage;\n","import React from 'react';\nimport './App.scss';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport GettingStarted from './GettingStarted';\nimport Usage from './Usage';\nimport ReactGA from 'react-ga';\n\nfunction App() {\n  // Setup GA\n  ReactGA.initialize('UA-37972059-10');\n  ReactGA.pageview('/');\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" className=\"shadow-sm\">\n        <Container>\n          <Navbar.Brand>Cities: Skylines Multiplayer</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link\n                target=\"_blank\"\n                href=\"https://steamcommunity.com/sharedfiles/filedetails/?id=1558438291\"\n              >\n                Steam Workshop\n              </Nav.Link>\n              <Nav.Link\n                target=\"_blank\"\n                href=\"https://www.patreon.com/CSM_MultiplayerMod\"\n              >\n                Patreon\n              </Nav.Link>\n              <Nav.Link target=\"_blank\" href=\"https://discord.gg/RjACPhd\">\n                Discord Server\n              </Nav.Link>\n              <Nav.Link\n                target=\"_blank\"\n                href=\"https://github.com/CitiesSkylinesMultiplayer/CSM/\"\n              >\n                GitHub\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <Jumbotron fluid>\n        <Container>\n          <h1>Welcome</h1>\n          <p>\n            Cities: Skylines Multiplayer (CSM) is an in-development multiplayer\n            mod for Cities: Skylines. <br />\n            This mod aims to provide a simple client-server experience where\n            users can play and build together in a single game.\n          </p>\n        </Container>\n      </Jumbotron>\n\n      <Container className=\"js-toc-content\">\n        <Row>\n          <Col sm={12} md={9}>\n            <GettingStarted />\n            <Usage />\n          </Col>\n          <Col sm={12} md={3} className=\"d-none d-lg-block\">\n            <div className=\"js-toc sticky-top\" />\n          </Col>\n        </Row>\n      </Container>\n\n      <footer className=\"Footer pt-3 pb-1 mt-5\">\n        <Container>\n          <p>\n            <small>\n              This website and mod are in no way affiliated with Cities:\n              Skylines or Paradox Interactive / Colossal Order\n            </small>\n          </p>\n        </Container>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport * as tocbot from 'tocbot';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// Run the table of contents generator\ntocbot.init({\n  tocSelector: '.js-toc',\n  contentSelector: '.js-toc-content',\n  headingSelector: 'h1, h2, h3, h4, h5, h6',\n  collapseDepth: 3,\n});\n\ntocbot.refresh();\n"],"sourceRoot":""}